domain:
{
  # number of cells in each dimension
  nCell = [ 8, 8, 8 ]

  # number of processors in each dimension (parallel version only)
  nProc = [ 1, 1, 1 ]
}

runtime: 
{
  # number of time steps to run
  nTimesteps = 2

  # start time
  startTime = 0.0

  # debug = 1 turns on basic debug print statements
  # debug = 2 turns on more debug print statements
  debug = 2
}

initialization:
{
  # whether this is restart of a previous run
  restart = 1

  # particle initialization
  particles:
  {
    # number of species
    nSpecies = 2

    # mass of each species in unit of electron mass
    mass_ratio = [1.0, 1836.13]

    # charge of each species in unit of |e|
    charge_ratio = [-1.0, 1.0]

    # fractional density of species
    dens_frac = [0.5,0.5]  

    # number of particles of all species in each domain
    nParticles = 16
  
    # position distribution function
    xdist = "sinusoid"
    #xdist = "delta function"
    #xdist = "file: xdist.dat"
  
    # velocity distribution function
    vdist = "maxwellian"
    #vdist = "waterbag"
    #vdist = "file: vdist.dat"
  
    maxwellian:
    {
      # density of nspecies in unit of 10^18 cm^{-3}
      # used to scale super particle mass and charge
      density = [0.1, 0.1]

      # temperature of nspecies in unit of eV
      temperature = [100.0, 1.0]
    }
  
    sinusoid:
    {
      k = [ 1, 1, 1 ]
    }
  }
 
  fields:
  {
    init = "zero"
    #init = "poisson"
    #init = "file: fields.dat"

  }
}

boundary:
{
  # Note: in each direction, if on side is "periodic", the other side must also be "periodic"

  # particle boundary
  particles:
  {
    # conditions = [xleft,xright,yleft,yright,zleft,zright]
    conditions = ["periodic","periodic", 
                "periodic","periodic",
                "periodic","periodic"]
  }


  # field boundary 
  fields:
  {
    # conditions = [xleft,xright,yleft,yright,zleft,zright]
    conditions = ["periodic","periodic", 
                "periodic","periodic",
                "periodic","periodic"]

    ## If and only if conditions[i]="external", will the following be meaningful in i-direction 
    ## eg. if conditions[1]="periodic", conditions[3]="external", and inSide = [-1,2],
    ## then inPolE[0], corresponding to inSide[0]=-1, namely, wave injecttion in xleft, will
    ## be ignored; while inPolE[1], corresponding to inSide[1]=2, namely, wave injection
    ## in yright, will be meaninful to the program. 
    external:
    {
        # number of waves to inject
        nwaves = 1
     
        # from which sides are waves injectes
        inSide = [-1]
     
        # Which direction are wave E fields aligned with?
        inPolE = [2]
     
        # What are the wave E field amplitudes? amps=1 -> E=299.79KV/cm
        amps = [0.0001]
     
        # What are the wave frequencies? omegas=1 -> 190.40 GHz
        omegas = [1.2]
     
        # What are the wave phases in rad?
        phases = [0.0]
    }
  }
}

